// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using REST_API_GAMES.Data;

#nullable disable

namespace REST_API_GAMES.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231022225248_InitGamesDB")]
    partial class InitGamesDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("REST_API_GAMES.Models.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Developer", "Developer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe1db982-53e8-481f-830b-11f79c3a5bde"),
                            Name = "Infinity Ward"
                        },
                        new
                        {
                            Id = new Guid("587644c5-9947-456b-99ee-5f2da10ac5ea"),
                            Name = "4A Games"
                        });
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Conditions")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description")
                        .HasColumnOrder(3);

                    b.Property<string>("Genre")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<string>("Platform")
                        .HasColumnType("text");

                    b.Property<Guid?>("PublisherId")
                        .HasColumnType("uuid");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games", "Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("260f8851-336d-4c72-9917-e3d7af61b790"),
                            Conditions = "NEW",
                            Description = "Modern Warfare 3 is a first-person shooter video game much like its predecessors. Modern Warfare 3 for Microsoft Windows has dedicated server support.",
                            Genre = "First_Person_shooter",
                            Name = "Call of Duty: Modern Warfare 3",
                            Platform = "WINDOWS",
                            Rating = 10.0,
                            Time = new DateTime(2023, 10, 23, 0, 52, 48, 183, DateTimeKind.Local).AddTicks(566)
                        },
                        new
                        {
                            Id = new Guid("e82b4a7b-d40b-4436-b97e-3425a9a557dc"),
                            Conditions = "NEW",
                            Description = "Metro 2033",
                            Genre = "First_Person_shooter",
                            Name = "Metro 2033",
                            Platform = "PS5",
                            Rating = 9.0,
                            Time = new DateTime(2023, 10, 23, 0, 52, 48, 183, DateTimeKind.Local).AddTicks(911)
                        });
                });

            modelBuilder.Entity("REST_API_GAMES.Models.GameDeveloper", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeveloperId")
                        .HasColumnType("uuid");

                    b.HasKey("GameId", "DeveloperId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("GameDeveloper", "GameDeveloper");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("StockLevelNew")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StockLevelUsed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Inventories", "Inventories");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("SubTotal")
                        .HasColumnType("double precision");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Orders", "Orders");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("OrderItems", "OrderItems");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publisher", "Publisher");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0b0220a-630a-4bf8-8850-f9845e6def31"),
                            Name = "Activision"
                        },
                        new
                        {
                            Id = new Guid("b23737ed-6ac3-40a5-830b-e25f00727f81"),
                            Name = "THQ"
                        });
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Game", b =>
                {
                    b.HasOne("REST_API_GAMES.Models.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.GameDeveloper", b =>
                {
                    b.HasOne("REST_API_GAMES.Models.Developer", "Developer")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("REST_API_GAMES.Models.Game", "Game")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Inventory", b =>
                {
                    b.HasOne("REST_API_GAMES.Models.Game", "Game")
                        .WithOne("Inventory")
                        .HasForeignKey("REST_API_GAMES.Models.Inventory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.OrderItem", b =>
                {
                    b.HasOne("REST_API_GAMES.Models.Game", "Game")
                        .WithMany("GamesOrders")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("REST_API_GAMES.Models.Order", "Order")
                        .WithMany("GamesOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Developer", b =>
                {
                    b.Navigation("GameDevelopers");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Game", b =>
                {
                    b.Navigation("GameDevelopers");

                    b.Navigation("GamesOrders");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Order", b =>
                {
                    b.Navigation("GamesOrders");
                });

            modelBuilder.Entity("REST_API_GAMES.Models.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
